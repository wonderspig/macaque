/**
题目:
  给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。
  示例:
  输入: [-2,1,-3,4,-1,2,1,-5,4]
  输出: 6
  解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。
  进阶:
  如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的分治法求解

思路:
  局部最优解,不断更新最后得到全局最优解
  
效果:
  执行用时：4 ms, 在所有 Go 提交中击败了96.08%的用户
  内存消耗：3.2 MB, 在所有 Go 提交中击败了100.00%的用户
*/
func maxSubArray(nums []int) int {
    res, sum := ^int(^uint(0)>>1), 0
    for i := 0; i < len(nums);i++{
        if sum > 0{
            sum += nums[i]
        }else{
            sum = nums[i]
        }
        if res < sum{
            res = sum
        }
    }
    return res
}
